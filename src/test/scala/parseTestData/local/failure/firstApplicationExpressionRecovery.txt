Dhall File(0,46)
  DhallCompleteExpressionImpl(COMPLETE_EXPRESSION)(0,46)
    DhallExpressionImpl(EXPRESSION)(0,45)
      DhallLetBindingImpl(LET_BINDING)(0,13)
        DhallLetImpl(LET)(0,3)
          PsiElement(DhallTokenType.l)('l')(0,1)
          PsiElement(DhallTokenType.e)('e')(1,2)
          PsiElement(DhallTokenType.t)('t')(2,3)
        PsiElement(DhallTokenType.SPACE)(' ')(3,4)
        DhallNonreservedLabelImpl(NONRESERVED_LABEL)(4,5)
          DhallSimpleLabelImpl(SIMPLE_LABEL)(4,5)
            DhallCharacterImpl(CHARACTER)(4,5)
              PsiElement(DhallTokenType.y)('y')(4,5)
        PsiElement(DhallTokenType.SPACE)(' ')(5,6)
        PsiElement(DhallTokenType.=)('=')(6,7)
        PsiElement(DhallTokenType.SPACE)(' ')(7,8)
        DhallExpressionImpl(EXPRESSION)(8,13)
          DhallAnnotatedExpressionImpl(ANNOTATED_EXPRESSION)(8,13)
            DhallFirstApplicationExpressionImpl(FIRST_APPLICATION_EXPRESSION)(8,13)
              DhallSomeImpl(SOME)(8,12)
                PsiElement(DhallTokenType.S)('S')(8,9)
                PsiElement(DhallTokenType.o)('o')(9,10)
                PsiElement(DhallTokenType.m)('m')(10,11)
                PsiElement(DhallTokenType.e)('e')(11,12)
              DhallEndOfLineImpl(END_OF_LINE)(12,13)
                PsiElement(DhallTokenType.NEW_LINE)('\n')(12,13)
              PsiErrorElement:<application expression>, <arrow>, <builtin>, <combine types>, <combine>, <double literal>, <end of line>, <equivalent>, <import type>, <integer literal>, <natural literal>, <prefer>, DhallTokenType.!, DhallTokenType.#, DhallTokenType.&, DhallTokenType.', DhallTokenType.*, DhallTokenType.+, DhallTokenType.-, DhallTokenType.=, DhallTokenType.?, DhallTokenType.DOUBLE_QUOTE, DhallTokenType.GRAVE, DhallTokenType.SPACE, DhallTokenType.TAB, DhallTokenType.[, DhallTokenType.e, DhallTokenType.i, DhallTokenType.l, DhallTokenType.t, DhallTokenType.{ or DhallTokenType.| expected, got 'l'(13,13)
                <empty list>
      DhallLetBindingImpl(LET_BINDING)(13,27)
        DhallLetImpl(LET)(13,16)
          PsiElement(DhallTokenType.l)('l')(13,14)
          PsiElement(DhallTokenType.e)('e')(14,15)
          PsiElement(DhallTokenType.t)('t')(15,16)
        PsiElement(DhallTokenType.SPACE)(' ')(16,17)
        DhallNonreservedLabelImpl(NONRESERVED_LABEL)(17,18)
          DhallSimpleLabelImpl(SIMPLE_LABEL)(17,18)
            DhallCharacterImpl(CHARACTER)(17,18)
              PsiElement(DhallTokenType.LALPHA)('z')(17,18)
        PsiElement(DhallTokenType.SPACE)(' ')(18,19)
        PsiElement(DhallTokenType.=)('=')(19,20)
        PsiElement(DhallTokenType.SPACE)(' ')(20,21)
        DhallExpressionImpl(EXPRESSION)(21,27)
          DhallAnnotatedExpressionImpl(ANNOTATED_EXPRESSION)(21,27)
            DhallFirstApplicationExpressionImpl(FIRST_APPLICATION_EXPRESSION)(21,27)
              DhallMergeImpl(MERGE)(21,26)
                PsiElement(DhallTokenType.m)('m')(21,22)
                PsiElement(DhallTokenType.e)('e')(22,23)
                PsiElement(DhallTokenType.r)('r')(23,24)
                PsiElement(DhallTokenType.g)('g')(24,25)
                PsiElement(DhallTokenType.e)('e')(25,26)
              DhallEndOfLineImpl(END_OF_LINE)(26,27)
                PsiElement(DhallTokenType.NEW_LINE)('\n')(26,27)
              PsiErrorElement:<application expression>, <arrow>, <builtin>, <combine types>, <combine>, <double literal>, <end of line>, <equivalent>, <import type>, <integer literal>, <natural literal>, <prefer>, DhallTokenType.!, DhallTokenType.#, DhallTokenType.&, DhallTokenType.', DhallTokenType.*, DhallTokenType.+, DhallTokenType.-, DhallTokenType.=, DhallTokenType.?, DhallTokenType.DOUBLE_QUOTE, DhallTokenType.GRAVE, DhallTokenType.SPACE, DhallTokenType.TAB, DhallTokenType.[, DhallTokenType.e, DhallTokenType.i, DhallTokenType.l, DhallTokenType.t, DhallTokenType.{ or DhallTokenType.| expected, got 'l'(27,27)
                <empty list>
      DhallLetBindingImpl(LET_BINDING)(27,41)
        DhallLetImpl(LET)(27,30)
          PsiElement(DhallTokenType.l)('l')(27,28)
          PsiElement(DhallTokenType.e)('e')(28,29)
          PsiElement(DhallTokenType.t)('t')(29,30)
        PsiElement(DhallTokenType.SPACE)(' ')(30,31)
        DhallNonreservedLabelImpl(NONRESERVED_LABEL)(31,32)
          DhallSimpleLabelImpl(SIMPLE_LABEL)(31,32)
            DhallCharacterImpl(CHARACTER)(31,32)
              PsiElement(DhallTokenType.a)('a')(31,32)
        PsiElement(DhallTokenType.SPACE)(' ')(32,33)
        PsiElement(DhallTokenType.=)('=')(33,34)
        PsiElement(DhallTokenType.SPACE)(' ')(34,35)
        DhallExpressionImpl(EXPRESSION)(35,41)
          DhallAnnotatedExpressionImpl(ANNOTATED_EXPRESSION)(35,41)
            DhallFirstApplicationExpressionImpl(FIRST_APPLICATION_EXPRESSION)(35,41)
              DhallToMapImpl(TO_MAP)(35,40)
                PsiElement(DhallTokenType.t)('t')(35,36)
                PsiElement(DhallTokenType.o)('o')(36,37)
                PsiElement(DhallTokenType.M)('M')(37,38)
                PsiElement(DhallTokenType.a)('a')(38,39)
                PsiElement(DhallTokenType.p)('p')(39,40)
              DhallEndOfLineImpl(END_OF_LINE)(40,41)
                PsiElement(DhallTokenType.NEW_LINE)('\n')(40,41)
              PsiErrorElement:<application expression>, <arrow>, <builtin>, <combine types>, <combine>, <double literal>, <end of line>, <equivalent>, <import type>, <integer literal>, <natural literal>, <prefer>, DhallTokenType.!, DhallTokenType.#, DhallTokenType.&, DhallTokenType.', DhallTokenType.*, DhallTokenType.+, DhallTokenType.-, DhallTokenType.=, DhallTokenType.?, DhallTokenType.DOUBLE_QUOTE, DhallTokenType.GRAVE, DhallTokenType.SPACE, DhallTokenType.TAB, DhallTokenType.[, DhallTokenType.e, DhallTokenType.i, DhallTokenType.l, DhallTokenType.t, DhallTokenType.{ or DhallTokenType.| expected, got 'i'(41,41)
                <empty list>
      DhallInImpl(IN)(41,43)
        PsiElement(DhallTokenType.i)('i')(41,42)
        PsiElement(DhallTokenType.n)('n')(42,43)
      PsiElement(DhallTokenType.SPACE)(' ')(43,44)
      DhallExpressionImpl(EXPRESSION)(44,45)
        DhallAnnotatedExpressionImpl(ANNOTATED_EXPRESSION)(44,45)
          DhallPrimitiveExpressionImpl(PRIMITIVE_EXPRESSION)(44,45)
            DhallNaturalLiteralImpl(NATURAL_LITERAL)(44,45)
              DhallDigitImpl(DIGIT)(44,45)
                PsiElement(DhallTokenType.1)('1')(44,45)
    DhallEndOfLineImpl(END_OF_LINE)(45,46)
      PsiElement(DhallTokenType.NEW_LINE)('\n')(45,46)